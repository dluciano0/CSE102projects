#include <iostream>
#include <iomanip>
#include "circle.h"

using namespace std;

int main()
{
    double radius = 0;
    Circle userCircle;

    while(radius =! 0)
    {
        cout << "\nEnter the circle's radius: ";
        cin >> radius;


        try
        {
        userCircle.setRadius(radius);
        cout << setprecision(2) << fixed;
        cout << "Radius: " << userCircle.getRadius() << endl;
        cout << "Area : " << userCircle.getArea() << endl;
        cout << "Diameter: " << userCircle.getDiameter() << endl;
        cout << "Circumference: " << userCircle.getCircumference() << endl;
        }

        catch (Circle::NegativeRadius e)
        {
            cout << "That is not a valid radius." << endl <<endl;
        }
    }
    return 0;
}


#ifndef CIRCLE_H_INCLUDED
#define CIRCLE_H_INCLUDED
#include <iomanip>

using namespace std;

class Circle
{
    private:
        double radius;
        double pi = 3.14159;

    public:
        class NegativeRadius
        {

        };

        Circle()
        {
            radius = 0;
        }

        Circle(double r)
        {
            radius = r;
        }

        void setRadius(double r)
        {
            if (r >= 0)
                radius = r;
            else
                throw NegativeRadius();
        }

        double getRadius() const
        {
            return radius;
        }

        double getArea() const
        {
            return pi * radius * radius;
        }

        double getDiameter() const
        {
            return radius * 2;
        }

        double getCircumference() const
        {
            return 2 * pi * radius;
        }
};


#endif // CIRCLE_H_INCLUDED